#!/usr/bin/env python

##########
#  Presage, an extensible predictive text entry system
#  ------------------------------------------------------
#  Copyright (C) 2010  David Pellicer <dpellicer@warp.es>
#  Copyright (C) 2010  Matteo Vescovi <matteo.vescovi@yahoo.co.uk>
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License along
#  with this program; if not, write to the Free Software Foundation, Inc.,
#  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.


import optparse

def stop_service():
    import presage_dbus_service
    presage_dbus_service.stop()

def start_service():
    import presage_dbus_service
    presage_dbus_service.start()


if __name__ == '__main__':
    parser = optparse.OptionParser()
    parser.add_option ("-v", "--version", action="store_true",
                       dest="show_version", default=False,
                       help="show version and exit")
    parser.add_option ("-r", "--restart", action="store_true",
                       dest="should_restart", default=False,
                       help="restart presage predictive service")
    parser.add_option ("-s", "--start", action="store_true",
                       dest="should_start", default=False,
                       help="start presage predictive service")
    parser.add_option ("-t", "--stop", action="store_true",
                       dest="should_stop", default=False,
                       help="stop presage predictive service")

    options, args = parser.parse_args()
    
    if options.should_stop:
        stop_service()
    elif options.should_start:
        start_service()
    elif options.should_restart:
        stop_service()
        start_service()
    else:
        parser.print_help()
